#/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

if [[ $@ == "-v" ]]; then
    command echo  -e "yascp v=1.5; \n Available at https://github.com/wtsi-hgi/yascp \n commit cf277b8c285fec33bd2db476aa410f14c329287b"
elif [[ $@ == "test" ]]; then
    command echo -e "Runing test code from OneK1k" && bash $SCRIPT_DIR/../bsub_test.sh
elif [[ $@ == "sample_input" ]]; then
    command cp -r $SCRIPT_DIR/../../../sample_input ./
elif [[ $1 == "clean" ]]; then
    command echo -e "Removing work dir; after this you will not be able to use the catche to restart pipeline \n\n" && bash $SCRIPT_DIR/../bsub__removeWork.sh "${@:2}"
elif [[ $1 == "celltypes" ]]; then
    command echo -e "Running celltype assignment of provided h5ad file \n\n" && bash $SCRIPT_DIR/../bsub_test_celltypes.sh "${@:2}"
elif [[ $1 == "cluster" ]]; then
    command echo -e "Running clustering assesment of provided h5ad file \n\n" && bash $SCRIPT_DIR/../bsub_test_recluster.sh "${@:2}"
elif [[ $@ == "info" ]]; then
    command echo -e "\n\n#####YASCP 1.0#####\n###################\n###########################\nYASCP (Yet Another Single Cell Pieline)[https://github.com/wtsi-hgi/yascp] is a nextflow pipeline that QCs the scRNA Cellranger data by removing ambient RNA, deconvoluting donors, assigning celltypes, analysing concordances vs expected genotypes\n###########################\n\nYascp module has been set to run in multiple modes:\n 	*yascp -v :will describe the checkout tag used. \n 	*yascp test :will run a OneK1k test dataset. \n 	*yascp sample_input :will create a directory sample_input in your current working directory where you will sample input files. \n 	*yascp fetch :(you need an input.tsv file [ap per this: https://github.com/wtsi-hgi/yascp/blob/main/sample_input/input.tsv] in project directory where you would like to fetch the cellranged data. This file should contain sanger_sample_id as a header and all the uniqie sanger sample ids in the folowin rows) will fetch the cellranger data and prepeare the basic yascp inputs. \n  	*yascp clean inputs.nf: will rsync results and extract symlinks from the folder defined as an 'outdir' and then remove work directory to avoid running out of quota (this will remove nextflow catche and pipeline will need to be rerun from beggining if needed)\n	*yascp input.nf :will run your samples as defined in input file. If you are unsure how to fill in the info file please refear to this documentation: https://github.com/wtsi-hgi/yascp/blob/main/docs/usage.md \n\n For the data interpretation please folow this documentation: https://github.com/wtsi-hgi/yascp/tree/main/docs"
elif [[ $@ == "fetch" ]]; then
    command echo -e "if you have prepeared an input.tsv file with a header 'sanger_sample_id' that lists all the unique sanger sample ids to retrieve then this will be now fetched. \n" && bash /software/hgi/pipelines/yascp_nf_irods_to_lustre_versions/yascp_nf_irods_to_lustre_1.1/scripts/bsub_module.sh
else
    command bash $SCRIPT_DIR/../bsub.sh "$@"
fi